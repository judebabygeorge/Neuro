function [estM,fval] = estimate_model(D)

    x  = zeros(D.nInputs,4);
    lb = zeros(size(x));
    ub = zeros(size(x));
    
    %Initialize model 
    x(:,1)=0.5;x(:,3)=0;    
    
    %Initialize Limits
    wmax = 2;
    dmax = 20;
    lb(:,1) = 0;lb(:,2) = 0;lb(:,3) = -wmax;lb(:,4) = 0;
    ub(:,1) = wmax;ub(:,2) = dmax;ub(:,3) = 0;ub(:,4) = dmax;    
    
    x = x(:);
    lb = lb(:);
    ub = ub(:);
    options = optimset('Algorithm','active-set','TolFun',1e-9,'Display','iter-detailed');
    [x , fval] = fmincon(@model_calc,x,[],[],[],[],lb,ub,[],options);
    estM = reshape(x,[numel(x)/4 4]);
    function y = model_calc(x)
        %Calculate predicted output
        M = reshape(x,[numel(x)/4 4]);
        
        [P,t] = CalculateModelOutput(M,D.I,D.d) ; 
        
        %Calculate Cost function to minimize              
        y = CalculateModelError(D,P,t);
    end
    
end
function y = CalculateModelError(D,P,t)
        Pe = abs(P-D.P).^2;
        P(P>1)
        te = (abs(t-D.t).^2).*D.P;
        y  = sum(Pe(:)) + sum(te(te(:)>0)) ;
        y  = 1*y;
end