function StimConfig = GenerateStimulusConfig_Train (Electrodes,max,PatternInterval,PulseInterval,StimConfig)

%Number of Configs required = Number of Electrodes
%p different patterns , r electrodes at a time

 maxPatterns = max ; 
 if(maxPatterns>127)
  maxPatterns = 127 ;
 end
 
  r = 2;
  p = 1;
 if(isempty(StimConfig))
 %number of electrode groups for check 
     nG = floor(numel(Electrodes)/r); % 2 pair
     Electrodes = reshape(Electrodes,[1 numel(Electrodes)]);
     StimConfig.Electrodes = Electrodes(1:(nG*r)) ;


     %Properties
     StimConfig.PatternInterval = PatternInterval ;
     StimConfig.PulseInterval   = PulseInterval   ;



     %Two sets of all sequences 
     n = numel(StimConfig.Electrodes);
     ElectrodeSets = reshape(randperm(n),[r,nG]);
     StimConfig.ElectrodeSets = ElectrodeSets ;

     StimConfig.Patterns      = zeros(r,p);
     StimConfig.PatternDelay  = zeros(size(StimConfig.Patterns)); 
     StimConfig.TrainId       = 1 ;
 else
     StimConfig.TrainId       = StimConfig.TrainId + 1 ;
 end
 
     
  StimConfig.Patterns  = StimConfig.ElectrodeSets(:,StimConfig.TrainId);     
    StimConfig.PatternDelay = [StimConfig.PulseInterval ; StimConfig.PulseInterval ];
     
 
 nSeq      = floor(maxPatterns/p) ;   
 StimConfig.PatternSequence = zeros(1,p*nSeq) ;  
 for i=1:nSeq
     StimConfig.PatternSequence(((i-1)*p +1):i*p) = randperm(p) ;
 end
 
 StimConfig.r              = r    ;
 StimConfig.p              = p    ;
 StimConfig.nSeq           = nSeq ;
 StimConfig.nLoop          = 1    ;
end

